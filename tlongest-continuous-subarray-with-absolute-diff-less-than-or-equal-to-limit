class Solution:
    def longestSubarray(self, nums: List[int], limit: int) -> int:
        if not nums:
            return 0
        if len(nums) == 1:
            return 1
        left = 0
        right = 1
        cur_mx = nums[0]
        cur_mn = nums[0]
        max_length = 1
        while left <= right and right < len(nums):
            cur_mx = max(cur_mx, nums[right])
            cur_mn = min(cur_mn, nums[right])

            if cur_mx - cur_mn <= limit:
                max_length = max(max_length, right - left + 1)
            else:
                if nums[left] == cur_mx:
                    cur_mx = max(nums[left + 1:right + 1])
                if nums[left] == cur_mn:
                    cur_mn = min(nums[left + 1:right + 1])
                left += 1
            right += 1
        return max_length
