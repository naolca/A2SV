class Solution:
    def queensAttacktheKing(self, queens: List[List[int]], king: List[int]) -> List[List[int]]:


        final=[]

        #up
        x,y=king
        while y >= 0:
            y-=1
            if [x,y] in queens:
                final.append([x,y])
                break
        
        #down
        x,y=king

        while y<8:
            y+=1
            if [x,y] in queens:
                final.append([x,y])
                break
        
        #right
        x,y=king

        while x<8:
            x+=1
            if [x,y] in queens:
                final.append([x,y])
                break
        #left
        x,y=king

        while x>=0:
            x-=1
            if [x,y] in queens:
                final.append([x,y])
                break
        #right_diagonal(up)

        x,y=king

        while y>=0:
            y-=1
            x+=1
            if [x,y] in queens:
                final.append([x,y])
                break
        #left_diagonal(up)
        x,y=king

        while y>=0:
            y-=1
            x-=1
            if [x,y] in queens:
                final.append([x,y])
                break
        #right_diagonal(down)
        x,y=king

        while y<8:
            y+=1
            x+=1
            if [x,y] in queens:
                final.append([x,y])
                break
        #left_diagonal(down)
        x,y=king

        while y<8:
            y+=1
            x-=1
            if [x,y] in queens:
                final.append([x,y])
                break
        return final


        













                
