#User function Template for python3
from collections import defaultdict,deque

class Solution:
    def findOrder(self,alien_dict, N, K):
        # each letter in a the list should come after each letter in the word before it appeared. IMPORTANT!!
        d = defaultdict(list)
        order = alien_dict
        l,r = 0,1
        while r<len(order):
            i=0
            while i<len(order[l]) and i<len(order[r]):
                if order[l][i]!=order[r][i]:
                    d[order[l][i]].append(order[r][i])
                    break
                i+=1
            l+=1
            r+=1
        # print(d)
        characters = set()
        for word in order:
            for char in word:
                characters.add(char)
        characters = list(characters)
        indegree = defaultdict(int)
        for key in d:
            for after in d[key]:
                indegree[after] += 1
        # print(indegree)
        todo  = deque()
        for key in characters:
            if indegree[key] == 0:
                todo.appendleft(key)
        # print(todo)
        res = []
        while todo:
            curr = todo.pop()
            res.append(curr)
            # print(res)
            for after in d[curr]:
                indegree[after] -= 1
                if indegree[after] == 0:
                    todo.appendleft(after)
        return "".join(res)
            
    # code here



#{ 
 # Driver Code Starts
#Initial Template for Python 3

class sort_by_order:
    def __init__(self,s):
        self.priority = {}
        for i in range(len(s)):
            self.priority[s[i]] = i
    
    def transform(self,word):
        new_word = ''
        for c in word:
            new_word += chr( ord('a') + self.priority[c] )
        return new_word
    
    def sort_this_list(self,lst):
        lst.sort(key = self.transform)

if __name__ == '__main__':
    t=int(input())
    for _ in range(t):
        line=input().strip().split()
        n=int(line[0])
        k=int(line[1])
        
        alien_dict = [x for x in input().strip().split()]
        duplicate_dict = alien_dict.copy()
        ob=Solution()
        order = ob.findOrder(alien_dict,n,k)
        s = ""
        for i in range(k):
            s += chr(97+i)
        l = list(order)
        l.sort()
        l = "".join(l)
        if s != l:
            print(0)
        else:
            x = sort_by_order(order)
            x.sort_this_list(duplicate_dict)
            
            if duplicate_dict == alien_dict:
                print(1)
            else:
                print(0)


# } Driver Code Ends
