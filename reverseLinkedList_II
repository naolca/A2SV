# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseBetween(self, head: Optional[ListNode], left: int, right: int) -> Optional[ListNode]:

        lst=[]

        while head:
            lst.append(head.val)
            head=head.next
        

        lst=lst[:left-1]+lst[left-1:right][::-1]+lst[right:]

       

        head=ListNode()
        dummy=ListNode()
        head.next=dummy

        for i in range(len(lst)):
            dummy.next=ListNode(lst[i])
            dummy=dummy.next

        

        return head.next.next
