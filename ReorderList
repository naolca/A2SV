# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reorderList(self, head: Optional[ListNode]) -> None:
        """
        Do not return anything, modify head in-place instead.
        """
        dict ={}
        index = 0
        node = head
        while node!=None:
            dict[index] = node
            index+=1
            node = node.next
        node = head
        i = index//2 + index%2
        while i>0:
            index-=1
            tmp = node.next
            node.next = dict[index]
            if i > 1:
                dict[index].next = tmp
            else:
                dict[index].next = None
            node = tmp
            i-=1
